{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinaackevic/Downloads/react-main/API/src/pages/User.jsx\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { Await, useLoaderData, redirect } from \"react-router-dom\";\nimport icon from \"../img/album-icon.png\";\nimport Name from \"../components/Name\";\nimport FetchUrl from \"../components/Api\";\nimport InfoUser from \"../components/InfoUser\";\nimport InfoAlbum from \"../components/InfoAlbum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loader = async _ref => {\n  let {\n    params: {\n      id\n    }\n  } = _ref;\n  const user = await FetchUrl(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const albums = await FetchUrl(`https://jsonplaceholder.typicode.com/albums?userId=${id}`);\n  if (!user.info.id) {\n    throw redirect(`*`);\n  }\n  const infoPromise = [user, albums];\n  return {\n    infoPromise\n  };\n};\nexport default function User() {\n  _s();\n  const {\n    infoPromise\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: infoPromise,\n      errorElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Ooops!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 50\n      }, this),\n      children: infoPromise => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            name: infoPromise[0].info.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoUser, {\n            username: infoPromise[0].info.username,\n            email: infoPromise[0].info.email,\n            phone: infoPromise[0].info.phone,\n            website: infoPromise[0].info.website\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium text-black mt-4\",\n            children: \"Albums:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-1\",\n            children: infoPromise[1].info.map(album => /*#__PURE__*/_jsxDEV(InfoAlbum, {\n              className: \"text-stone-600 hover:text-blue-600 underline\",\n              id: album.id,\n              title: album.title,\n              src: icon,\n              alt: \"icon\",\n              url: `/albums/${album.id}`\n            }, album.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"wgsu34FB9uIUpFZ+IJzFtYwaZ/w=\", false, function () {\n  return [useLoaderData];\n});\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["Suspense","Await","useLoaderData","redirect","icon","Name","FetchUrl","InfoUser","InfoAlbum","loader","params","id","user","albums","info","infoPromise","User","name","username","email","phone","website","map","album","title"],"sources":["/Users/ekaterinaackevic/Downloads/react-main/API/src/pages/User.jsx"],"sourcesContent":["import { Suspense } from \"react\";\nimport { Await, useLoaderData, redirect } from \"react-router-dom\";\nimport icon from \"../img/album-icon.png\";\nimport Name from \"../components/Name\";\nimport FetchUrl from \"../components/Api\";\nimport InfoUser from \"../components/InfoUser\";\nimport InfoAlbum from \"../components/InfoAlbum\";\n\nexport const loader = async ({ params: { id } }) => {\n  const user = await FetchUrl(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  const albums = await FetchUrl(\n    `https://jsonplaceholder.typicode.com/albums?userId=${id}`\n  );\n\n  if (!user.info.id) {\n    throw redirect(`*`);\n  }\n\n  const infoPromise = [user, albums];\n  return { infoPromise };\n};\n\nexport default function User() {\n  const { infoPromise } = useLoaderData();\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Await resolve={infoPromise} errorElement={<div>Ooops!</div>}>\n        {(infoPromise) => {\n          return (\n            <div>\n              <Name name={infoPromise[0].info.name} />\n\n              <InfoUser\n                username={infoPromise[0].info.username}\n                email={infoPromise[0].info.email}\n                phone={infoPromise[0].info.phone}\n                website={infoPromise[0].info.website}\n              />\n\n              <div className=\"text-lg font-medium text-black mt-4\">Albums:</div>\n              <div className=\"flex flex-col gap-1\">\n                {infoPromise[1].info.map((album) => (\n                  <InfoAlbum\n                    className=\"text-stone-600 hover:text-blue-600 underline\"\n                    key={album.id}\n                    id={album.id}\n                    title={album.title}\n                    src={icon}\n                    alt=\"icon\"\n                    url={`/albums/${album.id}`}\n                  />\n                ))}\n              </div>\n            </div>\n          );\n        }}\n      </Await>\n    </Suspense>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,kBAAkB;AACjE,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,OAAO,MAAMC,MAAM,GAAG,cAA8B;EAAA,IAAvB;IAAEC,MAAM,EAAE;MAAEC;IAAG;EAAE,CAAC;EAC7C,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CACxB,8CAA6CK,EAAG,EAAC,CACnD;EACD,MAAME,MAAM,GAAG,MAAMP,QAAQ,CAC1B,sDAAqDK,EAAG,EAAC,CAC3D;EAED,IAAI,CAACC,IAAI,CAACE,IAAI,CAACH,EAAE,EAAE;IACjB,MAAMR,QAAQ,CAAE,GAAE,CAAC;EACrB;EAEA,MAAMY,WAAW,GAAG,CAACH,IAAI,EAAEC,MAAM,CAAC;EAClC,OAAO;IAAEE;EAAY,CAAC;AACxB,CAAC;AAED,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAM;IAAED;EAAY,CAAC,GAAGb,aAAa,EAAE;EAEvC,oBACE,QAAC,QAAQ;IAAC,QAAQ,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;IAAA,uBACxC,QAAC,KAAK;MAAC,OAAO,EAAEa,WAAY;MAAC,YAAY,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;MAAA,UACzDA,WAAW,IAAK;QAChB,oBACE;UAAA,wBACE,QAAC,IAAI;YAAC,IAAI,EAAEA,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eAExC,QAAC,QAAQ;YACP,QAAQ,EAAEF,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACI,QAAS;YACvC,KAAK,EAAEH,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACK,KAAM;YACjC,KAAK,EAAEJ,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACM,KAAM;YACjC,OAAO,EAAEL,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACO;UAAQ;YAAA;YAAA;YAAA;UAAA,QACrC,eAEF;YAAK,SAAS,EAAC,qCAAqC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eAClE;YAAK,SAAS,EAAC,qBAAqB;YAAA,UACjCN,WAAW,CAAC,CAAC,CAAC,CAACD,IAAI,CAACQ,GAAG,CAAEC,KAAK,iBAC7B,QAAC,SAAS;cACR,SAAS,EAAC,8CAA8C;cAExD,EAAE,EAAEA,KAAK,CAACZ,EAAG;cACb,KAAK,EAAEY,KAAK,CAACC,KAAM;cACnB,GAAG,EAAEpB,IAAK;cACV,GAAG,EAAC,MAAM;cACV,GAAG,EAAG,WAAUmB,KAAK,CAACZ,EAAG;YAAE,GALtBY,KAAK,CAACZ,EAAE;cAAA;cAAA;cAAA;YAAA,QAOhB;UAAC;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAEV;IAAC;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACC;AAEf;AAAC,GAtCuBK,IAAI;EAAA,QACFd,aAAa;AAAA;AAAA,KADfc,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}