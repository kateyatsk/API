{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinaackevic/Downloads/react-main/API/src/directions/Album.jsx\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { Await, useLoaderData, redirect } from \"react-router-dom\";\nimport Name from \"../components/Name\";\nimport FetchUrl from \"../components/Api\";\nimport InfoLink from \"../components/InfoLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loader = async _ref => {\n  let {\n    params: {\n      id\n    }\n  } = _ref;\n  const album = await FetchUrl(`https://jsonplaceholder.typicode.com/albums/${id}`);\n  const photos = await FetchUrl(`https://jsonplaceholder.typicode.com/photos?albumId=${id}`);\n  const users = await FetchUrl(`https://jsonplaceholder.typicode.com/albums/${id}`);\n  const user = await FetchUrl(`https://jsonplaceholder.typicode.com/users/${users.info.userId}`);\n  if (!album.info.id) {\n    throw redirect(`*`);\n  }\n  const infoPromise = [album, photos, user];\n  return {\n    infoPromise\n  };\n};\nexport default function Album() {\n  _s();\n  const {\n    infoPromise\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: infoPromise,\n      errorElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Ooops!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 56\n      }, this),\n      children: infoPromise => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            name: infoPromise[0].info.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-1 text-stone-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Created by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(InfoLink, {\n              className: \"hover:text-blue-500 underline\",\n              url: `/users/${infoPromise[2].info.id}`,\n              name: infoPromise[2].info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-4 mt-4\",\n            children: infoPromise[1].info.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: photo.id,\n              src: photo.url\n            }, photo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Album, \"VlvYKzWermm+cpDFUnuD3hYMR88=\", false, function () {\n  return [useLoaderData];\n});\n_c = Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["Suspense","Await","useLoaderData","redirect","Name","FetchUrl","InfoLink","loader","params","id","album","photos","users","user","info","userId","infoPromise","Album","title","name","map","photo","url"],"sources":["/Users/ekaterinaackevic/Downloads/react-main/API/src/directions/Album.jsx"],"sourcesContent":["import {Suspense} from \"react\";\nimport {\n    Await,\n    useLoaderData,\n    redirect,\n} from \"react-router-dom\";\nimport Name from \"../components/Name\";\nimport FetchUrl from \"../components/Api\";\nimport InfoLink from \"../components/InfoLink\";\n\nexport const loader = async ({params: {id}}) => {\n    const album = await FetchUrl(\n        `https://jsonplaceholder.typicode.com/albums/${id}`\n    );\n    const photos = await FetchUrl(\n        `https://jsonplaceholder.typicode.com/photos?albumId=${id}`\n    );\n    const users = await FetchUrl(\n        `https://jsonplaceholder.typicode.com/albums/${id}`\n    );\n    const user = await FetchUrl(\n        `https://jsonplaceholder.typicode.com/users/${users.info.userId}`\n    );\n\n    if (!album.info.id) {\n        throw redirect(`*`);\n    }\n\n    const infoPromise = [album, photos, user];\n\n    return {infoPromise};\n};\n\nexport default function Album() {\n    const {infoPromise} = useLoaderData();\n\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <Await resolve={infoPromise} errorElement={<div>Ooops!</div>}>\n                {(infoPromise) => {\n                    return (\n                        <div>\n                            <Name name={infoPromise[0].info.title}/>\n\n                            <div className=\"flex flex-row gap-1 text-stone-600\">\n                                <p>Created by:</p>\n                                <InfoLink\n                                    className=\"hover:text-blue-500 underline\"\n                                    url={`/users/${infoPromise[2].info.id}`}\n                                    name={infoPromise[2].info.name}\n                                />\n                            </div>\n\n                            <div className=\"grid grid-cols-3 gap-4 mt-4\">\n                                {infoPromise[1].info.map((photo) => (\n                                    <img key={photo.id} alt={photo.id} src={photo.url}/>\n                                ))}\n                            </div>\n                        </div>\n                    );\n                }}\n            </Await>\n        </Suspense>\n    );\n}\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SACIC,KAAK,EACLC,aAAa,EACbC,QAAQ,QACL,kBAAkB;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAE9C,OAAO,MAAMC,MAAM,GAAG,cAA0B;EAAA,IAAnB;IAACC,MAAM,EAAE;MAACC;IAAE;EAAC,CAAC;EACvC,MAAMC,KAAK,GAAG,MAAML,QAAQ,CACvB,+CAA8CI,EAAG,EAAC,CACtD;EACD,MAAME,MAAM,GAAG,MAAMN,QAAQ,CACxB,uDAAsDI,EAAG,EAAC,CAC9D;EACD,MAAMG,KAAK,GAAG,MAAMP,QAAQ,CACvB,+CAA8CI,EAAG,EAAC,CACtD;EACD,MAAMI,IAAI,GAAG,MAAMR,QAAQ,CACtB,8CAA6CO,KAAK,CAACE,IAAI,CAACC,MAAO,EAAC,CACpE;EAED,IAAI,CAACL,KAAK,CAACI,IAAI,CAACL,EAAE,EAAE;IAChB,MAAMN,QAAQ,CAAE,GAAE,CAAC;EACvB;EAEA,MAAMa,WAAW,GAAG,CAACN,KAAK,EAAEC,MAAM,EAAEE,IAAI,CAAC;EAEzC,OAAO;IAACG;EAAW,CAAC;AACxB,CAAC;AAED,eAAe,SAASC,KAAK,GAAG;EAAA;EAC5B,MAAM;IAACD;EAAW,CAAC,GAAGd,aAAa,EAAE;EAErC,oBACI,QAAC,QAAQ;IAAC,QAAQ,eAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;IAAA,uBACtC,QAAC,KAAK;MAAC,OAAO,EAAEc,WAAY;MAAC,YAAY,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;MAAA,UACvDA,WAAW,IAAK;QACd,oBACI;UAAA,wBACI,QAAC,IAAI;YAAC,IAAI,EAAEA,WAAW,CAAC,CAAC,CAAC,CAACF,IAAI,CAACI;UAAM;YAAA;YAAA;YAAA;UAAA,QAAE,eAExC;YAAK,SAAS,EAAC,oCAAoC;YAAA,wBAC/C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAkB,eAClB,QAAC,QAAQ;cACL,SAAS,EAAC,+BAA+B;cACzC,GAAG,EAAG,UAASF,WAAW,CAAC,CAAC,CAAC,CAACF,IAAI,CAACL,EAAG,EAAE;cACxC,IAAI,EAAEO,WAAW,CAAC,CAAC,CAAC,CAACF,IAAI,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA,QACjC;UAAA;YAAA;YAAA;YAAA;UAAA,QACA,eAEN;YAAK,SAAS,EAAC,6BAA6B;YAAA,UACvCH,WAAW,CAAC,CAAC,CAAC,CAACF,IAAI,CAACM,GAAG,CAAEC,KAAK,iBAC3B;cAAoB,GAAG,EAAEA,KAAK,CAACZ,EAAG;cAAC,GAAG,EAAEY,KAAK,CAACC;YAAI,GAAxCD,KAAK,CAACZ,EAAE;cAAA;cAAA;cAAA;YAAA,QACrB;UAAC;YAAA;YAAA;YAAA;UAAA,QACA;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAEd;IAAC;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACD;AAEnB;AAAC,GA/BuBQ,KAAK;EAAA,QACHf,aAAa;AAAA;AAAA,KADfe,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}